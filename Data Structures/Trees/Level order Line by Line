void levelOrder(Node* node)
{
 queue<Node*> q;
q.push(node);
int count=0;
int i=0, flag=0,flag2=0;
int power=pow(2,i);
while(!q.empty()){
if(q.front()==NULL){
        
        flag=flag+1;
        q.pop();
        count++;
        if((count)==power && !q.empty()){
        cout<<"$"<<" ";
        flag2=1;
        
        flag=flag*2;count=flag;
       
        power=pow(2,++i);
        
    }
        continue;
    }
    Node* topq=q.front();
    q.pop();
    count++;
    cout<<topq->data<<" ";
    flag2=0;
    if(topq->left!=NULL){
        q.push(topq->left);
    }else{
        q.push(NULL);
    }
    if(topq->right!=NULL){
        q.push(topq->right);
    }else{q.push(NULL);
    }
    if((count)==power && !q.empty()){
    cout<<"$"<<" ";
    flag2=1;
         flag=flag*2;count=flag;
         
        power=pow(2,++i);
    }
}
if(flag2==0){
    cout<<"$";
}
}
